    ########
    Content
    ########
    Is a file that has shell's command in it. You should learn to write in bash at first, after that 
    learn how to use zsh

    When you create a bash(or shell file not sure) you have to add shebang (#!) at the head of the 
    file before /bin/bash. When you ./file.sh the linux kernel will read the head of the file first
    and when it see #! that mean execute the command behind it which mean execute /bin/bash.

    And so we have '#!/bin/bash' mean that run shell script in /bin/bash, and the name of the file 
    will be the parameter for /bin/bash and /bin/bash will run the file, thanks to shebang you don't
    have to write out the /bin/bash any more. 
    . This is the role of shebang:
    "./file.sh" -> "/bin/bash ./file.sh"
    
    ########
     Note: You need to use chmod to give the permission for sh file to execute it
    ########


    You can execute the shell script file in 3 ways:
    ./file_name.sh
    bash file_name.sh
    source ./file_name.sh

    The different is the first and second is excuted by the sub shell while the 3rd was executed by 
    current shell. In here, the sub shell is a child process created (ps that call out the shelwwl
    which is specified by shebang or user) in the shell to executed the script. And becasue of that 
    if  you run the shell script with source command the current shell will be affected by whatever
     the script do, on the other hand, if you run it with 1st or 2nd way the scipt itself won't 
     affect to the current shell since it runned on the sub shell. So make sure to use the right way

     If you want to add the path to the $PATH you can add PATH='$PATH:~/bin' to bashrc


